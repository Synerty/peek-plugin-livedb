"""initial commit

Peek Plugin Database Migration Script

Revision ID: 4740c2e8644a
Revises: 
Create Date: 2017-07-05 22:27:24.410159

"""

# revision identifiers, used by Alembic.
revision = '4740c2e8644a'
down_revision = None
branch_labels = None
depends_on = None


from sqlalchemy.schema import Sequence, CreateSequence
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ModelSet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='pl_livedb'
    )
    op.create_table('Setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='pl_livedb'
    )


    op.execute(CreateSequence(Sequence('LiveDbItem_id_seq',  schema='pl_livedb')))

    op.create_table('LiveDbItem',
    sa.Column('id', sa.Integer(), server_default=sa.text('nextval(\'pl_livedb."LiveDbItem_id_seq"\')'), nullable=False),
    sa.Column('modelSetId', sa.Integer(), nullable=False),
    sa.Column('liveDbKey', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('convertedValue', sa.String(), nullable=True),
    sa.Column('dataType', sa.Integer(), nullable=True),
    sa.Column('props', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('importHash', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['modelSetId'], ['pl_livedb.ModelSet.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='pl_livedb'
    )
    op.create_index('idx_LiveDbDKey_importHash', 'LiveDbItem', ['importHash'], unique=False, schema='pl_livedb')
    op.create_index('idx_LiveDbDKey_liveDbKey', 'LiveDbItem', ['liveDbKey'], unique=False, schema='pl_livedb')
    op.create_index('idx_LiveDbDKey_modelSetId', 'LiveDbItem', ['modelSetId'], unique=False, schema='pl_livedb')
    op.create_table('SettingProperty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('settingId', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=16), nullable=True),
    sa.Column('int_value', sa.Integer(), nullable=True),
    sa.Column('char_value', sa.String(), nullable=True),
    sa.Column('boolean_value', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['settingId'], ['pl_livedb.Setting.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='pl_livedb'
    )
    op.create_index('idx_SettingProperty_settingId', 'SettingProperty', ['settingId'], unique=False, schema='pl_livedb')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_SettingProperty_settingId', table_name='SettingProperty', schema='pl_livedb')
    op.drop_table('SettingProperty', schema='pl_livedb')
    op.drop_index('idx_LiveDbDKey_modelSetId', table_name='LiveDbTuple', schema='pl_livedb')
    op.drop_index('idx_LiveDbDKey_liveDbKey', table_name='LiveDbTuple', schema='pl_livedb')
    op.drop_index('idx_LiveDbDKey_importHash', table_name='LiveDbTuple', schema='pl_livedb')
    op.drop_table('LiveDbTuple', schema='pl_livedb')
    op.drop_table('Setting', schema='pl_livedb')
    op.drop_table('ModelSet', schema='pl_livedb')
    # ### end Alembic commands ###